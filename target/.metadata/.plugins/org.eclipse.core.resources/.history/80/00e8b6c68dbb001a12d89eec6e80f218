/*
 * stm32f401xx_spi_driver.c
 *
 *  Created on: Jun 30, 2020
 *      Author: VRUnleashed
 */

#include <stdint.h>
#include "stm32f401xx_spi_driver.h"

 /***
	* @brief  Configures master or slave mode
	* @param  *SPIx : Base address of the SPI
    * @param  master : if 1 , then configured for master
	* @retval None
	*/
void hal_spi_configure_device_mode(SPI_TypeDef *SPIx, uint32_t master) {
	if(master) {
		SPIx->CR1 |= SPI_REG_CR1_MSTR;
	} else {
		SPIx->CR1 &= ~SPI_REG_CR1_MSTR;
	}
}


/***
   * @brief  Configures SPI clk phase and polarity
   * @param  *SPIx : Base address of the SPI
   * @param  phase : configures phase ,
   * @param  polarity : configures polarity
   * @retval None
   */
void hal_spi_configure_phase_and_polarity(SPI_TypeDef *SPIx,uint32_t phase_value, uint32_t polarity) {
	if(phase_value) {
		SPIx->CR1 |= SPI_REG_CR1_CPHA;
	} else {
		SPIx->CR1 &= ~SPI_REG_CR1_CPHA;
	}

	if(polarity) {
		SPIx->CR1 |= SPI_REG_CR1_CPOL;
	} else {
		SPIx->CR1 &= ~SPI_REG_CR1_CPOL;
	}
}


/**
  * @brief  Configures SPI datasize
  * @param  *SPIx : Base address of the SPI
  * @param  datasize : data size to be configured  ,
  * @param  lsbmsbfirst : if 1, lsb will be sent first.
  * @retval None
  */
void hal_spi_configure_datasize(SPI_TypeDef *SPIx, uint32_t datasize_16, uint32_t lsbfirst) {
	if(datasize_16) {
		SPIx->CR1 |= SPI_REG_CR1_DFF;
	} else {
		SPIx->CR1 &= ~SPI_REG_CR1_DFF;
	}

	if(lsbfirst) {
		SPIx->CR1 |= SPI_CR1_LSBFRIST;
	} else {
		SPIx->CR1 &= ~SPI_CR1_LSBFRIST;
	}
}


/**
	* @brief  Configures the NSS pin of the master
	* @param  *SPIx : Base address of the SPI
	* @retval None
	*/
void hal_spi_configure_nss_master(SPI_TypeDef *SPIx, uint32_t ssm_enable) {
	if(ssm_enable) {
		SPIx->CR1 |= SPI_REG_CR1_SSM;
	} else {
		SPIx->CR1 &= ~SPI_REG_CR1_SSM;
	}
}
